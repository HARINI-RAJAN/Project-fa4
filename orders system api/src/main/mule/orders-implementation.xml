<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="variableSubFlow" doc:id="0e3e3e3b-3754-4d8c-a690-73b393db45c8" >
		<set-variable value="#[payload.orderDate]" doc:name="orderDate" doc:id="4f5b9452-8af2-4550-9b8f-bbcaf294735e" variableName="orderDate"/>
		<set-variable value="#[payload.shippedDate]" doc:name="shippedDate" doc:id="436c4131-c866-4ec0-8795-a2177809ad0d" variableName="shippedDate"/>
		<set-variable value="#[payload.orderStatus]" doc:name="orderStatus" doc:id="88156fd7-9eed-4786-9a44-040e6a19a84f" variableName="orderStatus"/>
		<set-variable value="#[payload.customerID]" doc:name="customerID" doc:id="ff245b22-d240-48d9-9003-4ca8038a8e6e" variableName="customerID"/>
		<set-variable value="#[payload.quantityOrdered]" doc:name="quantityOrdered" doc:id="87c50066-33a7-42bb-a81e-0b57dd1a69f8" variableName="quantityOrdered"/>
		<set-variable value="#[payload.priceEach]" doc:name="priceEach" doc:id="f7f136b6-4184-4bbd-b30d-fb8ca6c312d4" variableName="priceEach"/>
	</flow>
	<flow name="GetAllOrderDetailsFlow" doc:id="e6dd53a5-9322-44d2-9f41-bf09bb6e1806" >
		<db:select doc:name="select all order details" doc:id="869eb911-4719-4e73-a6f1-b2da5da33df6" config-ref="Database_Config">
			<db:sql ><![CDATA[select * from orders]]></db:sql>
		</db:select>
		<ee:transform doc:name="Get all order details" doc:id="dc0387ea-461d-484f-b22a-4db635993bae">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	orderNumber: payload01.orderNumber,
	orderDate: payload01.orderDate as String default "",
	shippedDate: payload01.shippedDate as String default "",
	orderStatus: payload01.orderStatus default "",
	customerID: payload01.customerID default "",
	quantityOrdered: payload01.quantityOrdered default 0,
	priceEach: payload01.priceEach default 0
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="getOrderDetailsByIDFlow" doc:id="43c1254e-e262-42e7-8180-f82fd834d2dd" >
		<db:query-single doc:name="select order details by OID" doc:id="7f7c1633-d59b-429b-bbf6-5c4d886fb623" config-ref="Database_Config">
			<db:sql ><![CDATA[select * from orders where orderNumber= :Id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	Id: vars.OID
}]]]></db:input-parameters>
		</db:query-single>
		<choice doc:name="Choice" doc:id="d46e21a3-9bab-4c6e-9378-91f23c8c91a3" >
			<when expression="#[sizeOf(payload)&gt;0]">
				<ee:transform doc:name="Get order details for given OID" doc:id="92e25d33-a8a9-42a2-910d-49a8be11e66b">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	orderNumber: payload.orderNumber,
	orderDate: payload.orderDate as String default "",
	shippedDate: payload.shippedDate as String default "",
	orderStatus: payload.orderStatus default "",
	customerID: payload.customerID default "",
	quantityOrdered: payload.quantityOrdered default 0,
	priceEach: payload.priceEach default 0
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Error message" doc:id="4595f642-9f32-4943-a815-397855fc2360" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"meassage": "ID doesn't exist.."
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="500" doc:name="" doc:id="bfaa8dee-f9c6-4826-994a-817fbd3f017c" variableName="httpStatus"/>
			</otherwise>
		</choice>
	</flow>
	<flow name="PostOrderDetailsFlow" doc:id="3b08e2aa-62b6-4263-b90a-6d1e279bdb1d">
		<flow-ref doc:name="variableSubFlow" doc:id="e64c3970-3c01-49d4-8957-2f997f3ad757" name="variableSubFlow" />
		<db:query-single doc:name="select maximum OID " doc:id="4ec2a4e8-7fbd-4ab7-a720-82df5ff75aad" config-ref="Database_Config">
			<db:sql><![CDATA[select max(orderNumber) from orders]]></db:sql>
		</db:query-single>
		<ee:transform doc:name="Increasing order number" doc:id="b7a5dc41-5a67-496f-a356-e5a0aa3cebb9">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	orderNumber: "O" ++ ((payload."max(orderNumber)"[1 to 3] as Number)+1)
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<db:insert doc:name="Insert order details" doc:id="a902bac9-d947-4988-a043-185cdf8e04c5" config-ref="Database_Config">
			<db:sql><![CDATA[insert into orders (orderNumber,orderDate,shippedDate,orderStatus,customerID,quantityOrdered,
priceEach) values(:OID,:orderDate,:shippedDate,:status,:custID,:quantity,:price)]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	OID: payload.orderNumber,
	orderDate: vars.orderDate as Date{format: "dd/MM/yyyy"} as Date,
	shippedDate: vars.shippedDate as Date{format: "dd/MM/yyyy"} as Date,
	status: vars.orderStatus,
	custID: vars.customerID,
	quantity: vars.quantityOrdered,
	price: vars.priceEach
}]]]></db:input-parameters>
		</db:insert>
		<db:query-single doc:name="order detail OID" doc:id="2ab8aee7-f30b-44d9-95ec-78c2c2d3b610" config-ref="Database_Config">
			<db:sql><![CDATA[select max(orderNumber) from orders]]></db:sql>
		</db:query-single>
		<ee:transform doc:name="Inserting new order details" doc:id="612b4b3e-8396-46ef-aeda-90b9b37ea5bf">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"message": "New order is created for ID: " ++ (payload."max(orderNumber)")
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="DeleteOrderDetailsFlow" doc:id="8c89523c-73b3-4f1e-81a9-442493be941f" >
		<set-variable value="#[attributes.uriParams.OID]" doc:name="OID" doc:id="9931ed0b-81e7-47f4-9d02-b4e497496a69" variableName="OID"/>
		<db:delete doc:name="Delete order details" doc:id="2076c29b-c9fc-49dd-9c00-9b5ea935235b" config-ref="Database_Config">
			<db:sql ><![CDATA[delete from orders where orderNumber= :OID]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	OID: vars.OID
}]]]></db:input-parameters>
		</db:delete>
		<choice doc:name="Choice" doc:id="cdcabe5a-c371-4774-8d6d-d937cd7d2a87" >
			<when expression="#[payload==1]">
				<ee:transform doc:name="Delete order details for given OID" doc:id="3a49d27b-d808-455c-bf36-0b7d564de433">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"message": "Order is deleted for ID: " ++ vars.OID
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Error message" doc:id="274b3c6f-b07e-4006-9750-68ff0420a172" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "The details are not deleted"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="#[500]" doc:name="Set Variable" doc:id="98ab18a5-066b-49f9-983a-d432376cbcbc" variableName="httpStatus"/>
			</otherwise>
		</choice>
	</flow>
	<flow name="PatchOrderDetailsFlow" doc:id="637738bc-d883-49fa-8ebc-fbe55148d6cd" >
		<flow-ref doc:name="variableSubFlow" doc:id="dd29f514-9869-4fdf-a0ce-06e4e9d9682e" name="variableSubFlow"/>
		<db:update doc:name="Update order details" doc:id="ebd8db98-e81f-4b37-aa84-c5ee8827ee72" config-ref="Database_Config">
			<db:sql ><![CDATA[update orders set quantityOrdered= :quantity, priceEach= :price where orderNumber= :OID]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	quantity: vars.quantityOrdered,
	price: vars.priceEach,
	OID: vars.OID
}]]]></db:input-parameters>
		</db:update>
		<choice doc:name="Choice" doc:id="7963bcbd-36f3-4a37-9db6-065042a5446c" >
			<when expression="#[payload.affectedRows==1]">
				<ee:transform doc:name="Update order details for given OID" doc:id="2498dd1c-a464-4c15-a66f-f7f1aded113a">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"message": "Order details are updated for ID: " ++ vars.OID
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Error message" doc:id="db1881d2-f34a-4926-a38a-3ff60b695f60" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "The order details are not updated"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="#[500]" doc:name="Set Variable" doc:id="a3bb2db2-51fd-44ce-aee1-9dbb57cebf9e" variableName="httpStatus"/>
			</otherwise>
		</choice>
	</flow>
	<flow name="PutOrderDetailsFlow" doc:id="c5446dc0-d437-4bad-9944-993e3e805815" >
		<flow-ref doc:name="variableSubFlow" doc:id="4d8a7c66-2460-4c67-8aa3-c5d2b7d15380" name="variableSubFlow"/>
		<db:query-single doc:name="To check whether OID is present or not" doc:id="2a361caa-a0f5-4c64-8709-58ad2e560e52" config-ref="Database_Config">
			<db:sql ><![CDATA[select * from orders where orderNumber= :OID]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	OID: vars.OID
}]]]></db:input-parameters>
		</db:query-single>
		<choice doc:name="Choice" doc:id="cb72ab6b-a003-49d7-9626-934e86fefbc2">
			<when expression="#[sizeOf(payload)&gt;0]">
				<db:update doc:name="Update order details" doc:id="74de1c42-3733-4332-b781-16db21580b67" config-ref="Database_Config">
					<db:sql><![CDATA[update orders set orderDate= :orderDate,shippedDate= :shippedDate,orderStatus= :status,
customerID= :custID,quantityOrdered= :quantity, priceEach= :price where orderNumber= :OID]]></db:sql>
					<db:input-parameters><![CDATA[#[{
	orderDate: vars.orderDate as Date{format: "dd/MM/yyyy"} as Date,
	shippedDate: vars.shippedDate as Date{format: "dd/MM/yyyy"} as Date,
	status: vars.orderStatus,
	custID: vars.customerID,
	quantity: vars.quantityOrdered,
	price: vars.priceEach,
	OID: vars.OID
	
}]]]></db:input-parameters>
				</db:update>
			</when>
			<otherwise>
				<db:query-single doc:name="select maximum OID " doc:id="33ad4549-86fd-48ed-925a-4edb501935de" config-ref="Database_Config">
					<db:sql><![CDATA[select max(orderNumber) from orders]]></db:sql>
				</db:query-single>
				<ee:transform doc:name="Increasing order number" doc:id="22d1440c-041e-4255-afb9-c03132812371">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	orderNumber: "O" ++ ((payload."max(orderNumber)"[1 to 3] as Number)+1)
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<db:insert doc:name="Inserting order details" doc:id="2d75b357-f46d-4746-94c5-4834cae19087" config-ref="Database_Config">
			<db:sql><![CDATA[insert into orders (orderNumber,orderDate,shippedDate,orderStatus,customerID,quantityOrdered,
priceEach) values(:OID,:orderDate,:shippedDate,:status,:custID,:quantity,:price)]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	OID: payload.orderNumber,
	orderDate: vars.orderDate as Date{format: "dd/MM/yyyy"} as Date,
	shippedDate: vars.shippedDate as Date{format: "dd/MM/yyyy"} as Date,
	status: vars.orderStatus,
	custID: vars.customerID default null,
	quantity: vars.quantityOrdered,
	price: vars.priceEach
}]]]></db:input-parameters>
		</db:insert>
			</otherwise>
		</choice>
		<ee:transform doc:name="Updating/Inserting order details for given OID" doc:id="3e157756-c105-40b3-95ad-a766f2030922" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "Order is updated: " ++ vars.OID
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
